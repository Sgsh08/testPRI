/**
 * Объявление пакета, в котором находится класс
 */
package tests;
/**
 * Добавление библиотек для проверки результатов теста
 */
import static org.junit.Assert.*;
/**
 * Добавление библиотек для тестирования
 */
import org.junit.Test;
/**
 * Добавление класса, в котором хранится метод расчета стоимости заказа
 */
import form.Calculation;
/**
 * Создание класса для тестирования
 */
public class Testik {
	/**
	 * Создание тестовых методов
	 */
	@Test
	/**
	 * Начало теста расчета стоимости заказа
	 */
	public void test1() {
		/**
		 * Тест для проверки расчета стоимости заказа 
		 * при следующих параметрах:
		 * Цена "Эспрессо" = 35 руб. (переменная price)
		 * Количество сахара - 1 (переменная sugar)
		 * Цена сахара - 3 руб (переменная sugar_price)
		 */
		int price = 35,  sugar = 1, sugar_price = 3;
		/**
		 * Переменная s отвечает за значение из функции calc_s, которая расположена
		 * в классе Calculation
		 */
		int s;
		/**
		 * Вызывается функция calc_s, в нее подаются значения для расчета
		 * стоимости заказа, а её результат записывается в переменную s
		 */
		s = Calculation.calc_s(price,sugar, sugar_price);
		/**
		 * Создается переменная tests, в которую записывается ожидаемый результат 
		 */
		int tests = 38;
		/**
		 * Сверяется результат работы фунциии calc_s (переменная s) и
		 * ожидаемый результат (переменная tests)
		 */
		assertEquals(tests,s);	
	}
	
	@Test
	/**
	 * Начало теста расчета стоимости заказа
	 */
	public void test2() {
		/**
		 * Тест для проверки расчета стоимости заказа 
		 * при следующих параметрах:
		 * Цена "Капучино" = 40 руб. (переменная price)
		 * Количество сахара - 3 (переменная sugar)
		 * Цена сахара - 3 руб (переменная sugar_price)
		 */
		int price = 40,  sugar = 3, sugar_price = 3;
		/**
		 * Переменная s отвечает за значение из функции calc_s, которая расположена
		 * в классе Calculation
		 */
		int s;
		/**
		 * Вызывается функция calc_s, в нее подаются значения для расчета
		 * стоимости заказа, а её результат записывается в переменную s
		 */
		s = Calculation.calc_s(price,sugar, sugar_price);
		/**
		 * Создается переменная tests, в которую записывается ожидаемый результат 
		 */
		int tests = 49;
		/**
		 * Сверяется результат работы фунциии calc_s (переменная s) и
		 * ожидаемый результат (переменная tests)
		 */
		assertEquals(tests,s);	
	}
	
	@Test
	/**
	 * Начало теста расчета стоимости заказа
	 */
	public void test3() {
		/**
		 * Тест для проверки расчета стоимости заказа 
		 * при следующих параметрах:
		 * Цена "Американо" = 30 руб. (переменная price)
		 * Количество сахара - 0 (переменная sugar)
		 * Цена сахара - 3 руб (переменная sugar_price)
		 */
		int price = 30,  sugar = 0, sugar_price = 3;
		/**
		 * Переменная s отвечает за значение из функции calc_s, которая расположена
		 * в классе Calculation
		 */
		int s;
		/**
		 * Вызывается функция calc_s, в нее подаются значения для расчета
		 * стоимости заказа, а её результат записывается в переменную s
		 */
		s = Calculation.calc_s(price,sugar, sugar_price);
		/**
		 * Создается переменная tests, в которую записывается ожидаемый результат 
		 */
		int tests = 30;
		/**
		 * Сверяется результат работы фунциии calc_s (переменная s) и
		 * ожидаемый результат (переменная tests)
		 */
		assertEquals(tests,s);	
	}
	
	@Test
	/**
	 * Начало теста расчета стоимости заказа
	 */
	public void test4() {
		/**
		 * Тест для проверки расчета стоимости заказа 
		 * при следующих параметрах:
		 * Цена "Латте" = 45 руб. (переменная price)
		 * Количество сахара - 2 (переменная sugar)
		 * Цена сахара - 3 руб (переменная sugar_price)
		 */
		int price = 45,  sugar = 2, sugar_price = 3;
		/**
		 * Переменная s отвечает за значение из функции calc_s, которая расположена
		 * в классе Calculation
		 */
		int s;
		/**
		 * Вызывается функция calc_s, в нее подаются значения для расчета
		 * стоимости заказа, а её результат записывается в переменную s
		 */
		s = Calculation.calc_s(price,sugar, sugar_price);
		/**
		 * Создается переменная tests, в которую записывается ожидаемый результат 
		 */
		int tests = 51;
		/**
		 * Сверяется результат работы фунциии calc_s (переменная s) и
		 * ожидаемый результат (переменная tests)
		 */
		assertEquals(tests,s);	
	}
	
	@Test
	/**
	 * Начало теста расчета стоимости заказа
	 */
	public void test5() {
		/**
		 * Тест для проверки расчета стоимости заказа 
		 * при следующих параметрах:
		 * Цена "Эспрессо" = 35 руб. (переменная price)
		 * Количество сахара - 0 (переменная sugar)
		 * Цена сахара - 3 руб (переменная sugar_price)
		 */
		int price = 35,  sugar = 0, sugar_price = 3;
		/**
		 * Переменная s отвечает за значение из функции calc_s, которая расположена
		 * в классе Calculation
		 */
		int s;
		/**
		 * Вызывается функция calc_s, в нее подаются значения для расчета
		 * стоимости заказа, а её результат записывается в переменную s
		 */
		s = Calculation.calc_s(price,sugar, sugar_price);
		/**
		 * Создается переменная tests, в которую записывается ожидаемый результат 
		 */
		int tests = 35;
		/**
		 * Сверяется результат работы фунциии calc_s (переменная s) и
		 * ожидаемый результат (переменная tests)
		 */
		assertEquals(tests,s);	
	}
	
	@Test
	/**
	 * Начало теста расчета стоимости заказа
	 */
	public void test6() {
		/**
		 * Тест для проверки расчета стоимости заказа 
		 * при следующих параметрах:
		 * Цена "Американо" = 30 руб. (переменная price)
		 * Количество сахара - 0 (переменная sugar)
		 * Цена сахара - 3 руб (переменная sugar_price)
		 */
		int price = 30,  sugar = 4, sugar_price = 3;
		/**
		 * Переменная s отвечает за значение из функции calc_s, которая расположена
		 * в классе Calculation
		 */
		int s;
		/**
		 * Вызывается функция calc_s, в нее подаются значения для расчета
		 * стоимости заказа, а её результат записывается в переменную s
		 */
		s = Calculation.calc_s(price,sugar, sugar_price);
		/**
		 * Создается переменная tests, в которую записывается ожидаемый результат 
		 */
		int tests = 42;
		/**
		 * Сверяется результат работы фунциии calc_s (переменная s) и
		 * ожидаемый результат (переменная tests)
		 */
		assertEquals(tests,s);	
	}
	
	@Test
	/**
	 * Начало теста расчета стоимости заказа
	 */
	public void test7() {
		/**
		 * Тест для проверки расчета стоимости заказа 
		 * при следующих параметрах:
		 * Цена "Латте" = 45 руб. (переменная price)
		 * Количество сахара - 0 (переменная sugar)
		 * Цена сахара - 3 руб (переменная sugar_price)
		 */
		int price = 45,  sugar = 5, sugar_price = 3;
		/**
		 * Переменная s отвечает за значение из функции calc_s, которая расположена
		 * в классе Calculation
		 */
		int s;
		/**
		 * Вызывается функция calc_s, в нее подаются значения для расчета
		 * стоимости заказа, а её результат записывается в переменную s
		 */
		s = Calculation.calc_s(price,sugar, sugar_price);
		/**
		 * Создается переменная tests, в которую записывается ожидаемый результат 
		 */
		int tests = 60;
		/**
		 * Сверяется результат работы фунциии calc_s (переменная s) и
		 * ожидаемый результат (переменная tests)
		 */
		assertEquals(tests,s);	
	}
	
	@Test
	/**
	 * Начало теста расчета стоимости заказа
	 */
	public void test8() {
		/**
		 * Тест для проверки расчета стоимости заказа 
		 * при следующих параметрах:
		 * Цена "Американо" = 30 руб. (переменная price)
		 * Количество сахара - 1 (переменная sugar)
		 * Цена сахара - 3 руб (переменная sugar_price)
		 */
		int price = 30,  sugar = 1, sugar_price = 3;
		/**
		 * Переменная s отвечает за значение из функции calc_s, которая расположена
		 * в классе Calculation
		 */
		int s;
		/**
		 * Вызывается функция calc_s, в нее подаются значения для расчета
		 * стоимости заказа, а её результат записывается в переменную s
		 */
		s = Calculation.calc_s(price,sugar, sugar_price);
		/**
		 * Создается переменная tests, в которую записывается ожидаемый результат 
		 */
		int tests = 33;
		/**
		 * Сверяется результат работы фунциии calc_s (переменная s) и
		 * ожидаемый результат (переменная tests)
		 */
		assertEquals(tests,s);	
	}
}